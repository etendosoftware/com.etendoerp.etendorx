services:
  config:
    env_file: ".env"
    build:
      context: .
      dockerfile: dynamic/Dockerfile
      args:
        - DEPENDENCIES=com.etendorx:configserver:${ETENDORX_VERSION}
        - REPO_URL=${ETENDORX_REPOSITORY_URL}
        - REPO_USER=${ETENDORX_REPOSITORY_USER}
        - REPO_PASSWORD=${ETENDORX_REPOSITORY_PASSWORD}
        - SPRING_PROFILES_ACTIVE=native
        - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS=file:///rxconfig
        - CONFIG_SERVER_URL=
    ports:
      - "8888:8888"
      - "${CONFIG_DEBUG_PORT:-5020}:8000"
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS=file:///rxconfig
      - SPRING_PROFILES_ACTIVE=native
      - DEPENDENCIES=com.etendorx:configserver:${ETENDORX_VERSION}
      - REPO_URL=${ETENDORX_REPOSITORY_URL}
      - REPO_USER=${ETENDORX_REPOSITORY_USER}
      - REPO_PASSWORD=${ETENDORX_REPOSITORY_PASSWORD}
      - CONFIG_SERVER_URL=
      - TASK=downloadJar
      # ---- Debugging & JVM ----
      - DEBUG_PORT=${CONFIG_DEBUG_PORT:-5020}
      - DEBUG_MODE=${CONFIG_DEBUG_MODE:-false}
      - DISABLE_DEBUG=${CONFIG_DISABLE_DEBUG:-false}
      - JAVA_OPTS=${CONFIG_JAVA_OPTS:-}
      - GRADLE_FLAGS=${CONFIG_GRADLE_FLAGS:-}
      # --- OpenTelemetry ---
      - ENABLE_OPEN_TELEMETRY=${OTEL_CONFIG_ENABLE:-false}
      - OTEL_SERVICE_NAME=${OTEL_CONFIG_NAME:-config}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_CONFIG_OTLP_ENDPOINT:-http://jaeger:4318}
      - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_CONFIG_OTLP_PROTOCOL:-http/protobuf}
      - OTEL_METRICS_EXPORTER=${OTEL_CONFIG_METRICS_EXPORTER:-none}
      - OTEL_LOGS_EXPORTER=${OTEL_CONFIG_LOGS_EXPORTER:-none}
      - OTEL_TRACES_EXPORTER=${OTEL_CONFIG_TRACES_EXPORTER:-otlp}
      - OTEL_EXPORTER_OTLP_TIMEOUT=${OTEL_CONFIG_EXPORTER_OTLP_TIMEOUT:-10000}
    networks:
      - etendo
    volumes:
      - ${VOLUMES_PATH}/rxconfig:/rxconfig
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8888/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 60

  das:
    env_file: ".env"
    depends_on:
      config:
        condition: service_healthy
    build:
      context: .
      dockerfile: das/Dockerfile
      args:
        - DEPENDENCIES=${ETENDORX_DEPENDENCIES}
        - REPO_URL=${ETENDORX_REPOSITORY_URL}
        - REPO_USER=${ETENDORX_REPOSITORY_USER}
        - REPO_PASSWORD=${ETENDORX_REPOSITORY_PASSWORD}
        - SPRING_PROFILES_ACTIVE=native
        - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS=file:///rxconfig
        - CONFIG_SERVER_URL=
        - DB_HOST=${ETENDORX_DB_HOST}
        - DB_PORT=${ETENDORX_DB_PORT}
        - DB_SID=${ETENDORX_DB_SID}
    ports:
      - "8092:8092"
      - "${DAS_DEBUG_PORT:-5021}:5021"
    environment:
      - DEPENDENCIES=${ETENDORX_DEPENDENCIES:-}
      - REPO_URL=${ETENDORX_REPOSITORY_URL}
      - REPO_USER=${ETENDORX_REPOSITORY_USER}
      - REPO_PASSWORD=${ETENDORX_REPOSITORY_PASSWORD}
      - CONFIG_SERVER_URL=${ETENDORX_CONFIG_SERVER_URL}
      - TASK=downloadJar
      - DB_HOST=${ETENDORX_DB_HOST}
      - DB_PORT=${ETENDORX_DB_PORT}
      - DB_SID=${ETENDORX_DB_SID}
      # ---- Debugging & JVM ----
      - DEBUG_PORT=${DAS_DEBUG_PORT:-5021}
      - DEBUG_MODE=${DAS_DEBUG_MODE:-false}
      - DISABLE_DEBUG=${DAS_DISABLE_DEBUG:-false}
      - JAVA_OPTS=${DAS_JAVA_OPTS:-}
      - GRADLE_FLAGS=${DAS_GRADLE_FLAGS:-}
      # --- OpenTelemetry ---
      - ENABLE_OPEN_TELEMETRY=${OTEL_DAS_ENABLE:-false}
      - OTEL_SERVICE_NAME=${OTEL_DAS_NAME:-das}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_DAS_OTLP_ENDPOINT:-http://jaeger:4318}
      - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_DAS_OTLP_PROTOCOL:-http/protobuf}
      - OTEL_METRICS_EXPORTER=${OTEL_DAS_METRICS_EXPORTER:-none}
      - OTEL_LOGS_EXPORTER=${OTEL_DAS_LOGS_EXPORTER:-none}
      - OTEL_TRACES_EXPORTER=${OTEL_DAS_TRACES_EXPORTER:-otlp}
      - OTEL_EXPORTER_OTLP_TIMEOUT=${OTEL_DAS_EXPORTER_OTLP_TIMEOUT:-10000}
    networks:
      - etendo
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8092/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 60


  auth:
    env_file: ".env"
    depends_on:
      config:
        condition: service_healthy
    build:
      context: .
      dockerfile: dynamic/Dockerfile
      args:
        - DEPENDENCIES=com.etendorx:configserver:${ETENDORX_VERSION}
        - REPO_URL=${ETENDORX_REPOSITORY_URL}
        - REPO_USER=${ETENDORX_REPOSITORY_USER}
        - REPO_PASSWORD=${ETENDORX_REPOSITORY_PASSWORD}
        - SPRING_PROFILES_ACTIVE=native
        - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS=file:///rxconfig
        - CONFIG_SERVER_URL=
    ports:
      - "8094:8094"
      - "${AUTH_DEBUG_PORT:-5022}:8000"
    environment:
      - DEPENDENCIES=com.etendorx:auth:${ETENDORX_VERSION}
      - REPO_URL=${ETENDORX_REPOSITORY_URL}
      - REPO_USER=${ETENDORX_REPOSITORY_USER}
      - REPO_PASSWORD=${ETENDORX_REPOSITORY_PASSWORD}
      - CONFIG_SERVER_URL=${ETENDORX_CONFIG_SERVER_URL}
      - TASK=downloadJar
      # ---- Debugging & JVM ----
      - DEBUG_PORT=${AUTH_DEBUG_PORT:-5022}
      - DEBUG_MODE=${AUTH_DEBUG_MODE:-false}
      - DISABLE_DEBUG=${AUTH_DISABLE_DEBUG:-false}
      - JAVA_OPTS=${AUTH_JAVA_OPTS:-}
      - GRADLE_FLAGS=${AUTH_GRADLE_FLAGS:-}
      # --- OpenTelemetry ---
      - ENABLE_OPEN_TELEMETRY=${OTEL_AUTH_ENABLE:-false}
      - OTEL_SERVICE_NAME=${OTEL_AUTH_NAME:-auth}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_AUTH_OTLP_ENDPOINT:-http://jaeger:4318}
      - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_AUTH_OTLP_PROTOCOL:-http/protobuf}
      - OTEL_METRICS_EXPORTER=${OTEL_AUTH_METRICS_EXPORTER:-none}
      - OTEL_LOGS_EXPORTER=${OTEL_AUTH_LOGS_EXPORTER:-none}
      - OTEL_TRACES_EXPORTER=${OTEL_AUTH_TRACES_EXPORTER:-otlp}
      - OTEL_EXPORTER_OTLP_TIMEOUT=${OTEL_AUTH_EXPORTER_OTLP_TIMEOUT:-10000}
    networks:
      - etendo
    volumes:
      - auth_vol:/root/.gradle
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8094/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 60

  edge:
    env_file: ".env"
    depends_on:
      config:
        condition: service_healthy
    build:
      context: .
      dockerfile: dynamic/Dockerfile
      args:
        - DEPENDENCIES=com.etendorx:configserver:${ETENDORX_VERSION}
        - REPO_URL=${ETENDORX_REPOSITORY_URL}
        - REPO_USER=${ETENDORX_REPOSITORY_USER}
        - REPO_PASSWORD=${ETENDORX_REPOSITORY_PASSWORD}
        - SPRING_PROFILES_ACTIVE=native
        - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS=file:///rxconfig
        - CONFIG_SERVER_URL=
    ports:
      - "8096:8096"
      - "${EDGE_DEBUG_PORT:-5023}:8000"
    environment:
      - DEPENDENCIES=com.etendorx:edge:${ETENDORX_VERSION}
      - REPO_URL=${ETENDORX_REPOSITORY_URL}
      - REPO_USER=${ETENDORX_REPOSITORY_USER}
      - REPO_PASSWORD=${ETENDORX_REPOSITORY_PASSWORD}
      - CONFIG_SERVER_URL=${ETENDORX_CONFIG_SERVER_URL}
      - TASK=downloadJar
      # ---- Debugging & JVM ----
      - DEBUG_PORT=${EDGE_DEBUG_PORT:-5023}
      - DEBUG_MODE=${EDGE_DEBUG_MODE:-false}
      - DISABLE_DEBUG=${EDGE_DISABLE_DEBUG:-false}
      - JAVA_OPTS=${EDGE_JAVA_OPTS:-}
      - GRADLE_FLAGS=${EDGE_GRADLE_FLAGS:-}
      # --- OpenTelemetry ---
      - ENABLE_OPEN_TELEMETRY=${OTEL_EDGE_ENABLE:-false}
      - OTEL_SERVICE_NAME=${OTEL_EDGE_NAME:-edge}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EDGE_OTLP_ENDPOINT:-http://jaeger:4318}
      - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_EDGE_OTLP_PROTOCOL:-http/protobuf}
      - OTEL_METRICS_EXPORTER=${OTEL_EDGE_METRICS_EXPORTER:-none}
      - OTEL_LOGS_EXPORTER=${OTEL_EDGE_LOGS_EXPORTER:-none}
      - OTEL_TRACES_EXPORTER=${OTEL_EDGE_TRACES_EXPORTER:-otlp}
      - OTEL_EXPORTER_OTLP_TIMEOUT=${OTEL_EDGE_EXPORTER_OTLP_TIMEOUT:-10000}
    networks:
      - etendo
    volumes:
      - edge_vol:/root/.gradle
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8096/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 60

networks:
  etendo:

volumes:
  das_cache_vol:
  das_app_vol:
  auth_vol:
  edge_vol:
